{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Essentials","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"KeyboardKit"}],"title":"Essentials"},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit extends Apple’s limited keyboard APIs. It extends the text document proxy to make it more capable, adds a lot of additional features, and lets you use SwiftUI instead of UIKit."}]},{"inlineContent":[{"type":"text","text":"KeyboardKit also has a "},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","isActive":true},{"type":"text","text":" view, that mimics the native iOS keyboard and can be customized and styled to great extent."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","type":"reference"},{"text":" unlocks a lot of essential Pro features, like more locales, autocomplete, emoji utilities, dictation, etc. Information about Pro features can be found at the end of this article.","type":"text"}]},{"anchor":"Keyboard-namespace","level":2,"type":"heading","text":"Keyboard namespace"},{"inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard","isActive":true,"type":"reference"},{"type":"text","text":" namespace with basic, keyboard-related types, like "},{"isActive":true,"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/Case"},{"text":", ","type":"text"},{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/AutocapitalizationType","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/ReturnKeyType","isActive":true,"type":"reference"},{"text":", etc.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This namespace doesn’t have protocols, open classes, or types that are meant to be top-level.","type":"text"}]},{"text":"Keyboard input view controller","type":"heading","anchor":"Keyboard-input-view-controller","level":2},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController"},{"type":"text","text":" is the most essential type in the library. Just make your "},{"type":"strong","inlineContent":[{"type":"text","text":"KeyboardController"}]},{"text":" inherit this class, to get access to a bunch of additional capabilities.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"KeyboardKit also has a ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardController","isActive":true},{"text":" protocol that aims to make it easier to use KeyboardKit in platforms that don’t support UIKit. This is however not fully implemented yet.","type":"text"}]},{"level":2,"anchor":"Keyboard-context","text":"Keyboard context","type":"heading"},{"inlineContent":[{"type":"text","text":"KeyboardKit has an observable "},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","isActive":true},{"text":" class that provides keyboard state, has a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/textDocumentProxy","type":"reference"},{"text":" reference, and lets you get and set ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/locale","isActive":true},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/keyboardType","type":"reference"},{"type":"text","text":", etc."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can use the context to affect the keyboard. For instance, setting the ","type":"text"},{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/keyboardType","isActive":true,"type":"reference"},{"type":"text","text":" will update the "},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","isActive":true},{"text":" accordingly.","type":"text"}]},{"inlineContent":[{"type":"text","text":"KeyboardKit automatically creates an instance of this class and injects it into "},{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/state","isActive":true,"type":"reference"},{"text":", and syncs it with the controller whenever needed.","type":"text"}],"type":"paragraph"},{"anchor":"Keyboard-behavior","level":2,"text":"Keyboard behavior","type":"heading"},{"inlineContent":[{"text":"KeyboardKit has a ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardBehavior","isActive":true},{"text":" protocol that can be used to define the keyboard’s behavior. It’s used by e.g. the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardActionHandler","type":"reference"},{"type":"text","text":" to make decisions."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"KeyboardKit automatically creates an instance of this class and injects it into ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/services"},{"text":". You can modify or replace it at any time.","type":"text"}]},{"text":"Views","level":2,"type":"heading","anchor":"Views"},{"level":3,"text":"System Keyboard","anchor":"System-Keyboard","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"KeyboardKit has a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"text":" that mimics a native iOS keyboards and can be used to create alphabetic, numeric and symbolic keyboards.","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"systemkeyboard-english-350.jpg","type":"image"}]},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","isActive":true},{"text":" supports all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale"},{"text":"s, custom layouts, callouts, and can be customized and styled to great extent, using a ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardStyleProvider","isActive":true},{"text":" or Pro ","type":"text"},{"inlineContent":[{"text":"Theme","type":"text"}],"type":"strong"},{"text":"s.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"systemkeyboard-styled-350.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will by default use a standard "},{"isActive":true,"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"text":". See ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","isActive":true},{"text":" for more information on how you can configure this view, or replace it with any custom view.","type":"text"}]},{"text":"How to customize the system keyboard","type":"heading","anchor":"How-to-customize-the-system-keyboard","level":3},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","type":"reference","isActive":true},{"type":"text","text":" can be customized to great extent. You can pass in custom services and state, and replace any part of the keyboard:"}]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"buttonContent","type":"text"}]},{"text":" can be used to customize the content view of any button.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"buttonView"}],"type":"strong"},{"text":" can be used to customize the entire view of any button.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"emojiKeyboard"}]},{"type":"text","text":" can be used to customize the "},{"inlineContent":[{"text":".emojis","type":"text"}],"type":"strong"},{"text":" keyboard view.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"toolbar"}],"type":"strong"},{"text":" can be used to customize the toolbar view above the keyboard.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"To use the standard views, just return "},{"type":"codeVoice","code":"{ $0.view }"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"{ params in params.view }"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["SystemKeyboard(","    controller: controller,","    buttonContent: { $0.view },","    buttonView: { $0.view },","    emojiKeyboard: { $0.view },","    toolbar: { params in params.view }",")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To customize or replace the standard content and item views for any layout item, just return any custom view in any view builder:"}]},{"code":["SystemKeyboard(","    controller: controller,","    buttonContent: { $0.view },","    buttonView: { $0.view },","    emojiKeyboard: { $0.view },","    toolbar: { _ in Text(\"No toolbar here!\") }",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Some view builder parameters provide more information. For instance, the button view builders provide you with the full layout item, the toolbar provides you with autocomplete actions, etc."}],"type":"paragraph"},{"anchor":"Toolbar","text":"Toolbar","level":3,"type":"heading"},{"inlineContent":[{"text":"Since it’s always a a good idea to have at least 50 points above the keyboard, KeyboardKit has a ","type":"text"},{"type":"codeVoice","code":"Keyboard\/Toolbar"},{"text":" view that applies a minimum height to its content.","type":"text"}],"type":"paragraph"},{"text":"👑 Pro features","type":"heading","anchor":"👑-Pro-features","level":2},{"type":"paragraph","inlineContent":[{"text":"KeyboardKit Pro unlocks additional, powerful capabilities for the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":"."}]},{"type":"heading","text":"Locales","level":3,"anchor":"Locales"},{"inlineContent":[{"text":"KeyboardKit Pro unlocks localized layouts, callouts, and services for all ","type":"text"},{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale","isActive":true,"type":"reference"},{"type":"text","text":"s. This means that you can support up to 63 locales without having to write any additional code."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"systemkeyboard-swedish-350.jpg"}],"type":"paragraph"},{"type":"heading","level":3,"anchor":"Emoji-Keyboard","text":"Emoji Keyboard"},{"inlineContent":[{"text":"KeyboardKit Pro (from Silver and up) will make ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","isActive":true},{"type":"text","text":" use an "},{"type":"strong","inlineContent":[{"text":"EmojisKeyboard","type":"text"}]},{"text":" view (read more in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emojis-Article"},{"text":") as the default emoji keyboard.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"emojikeyboard-350.jpg"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means that by just registering a valid license key, your keyboard will automatically show an emoji keyboard when "},{"isActive":true,"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/keyboardType"},{"text":" changes to ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/KeyboardType\/emojis","isActive":true},{"type":"text","text":"."}]},{"level":3,"type":"heading","anchor":"System-Keyboard-Preview","text":"System Keyboard Preview"},{"inlineContent":[{"type":"text","text":"KeyboardKit Pro unlocks a "},{"inlineContent":[{"type":"text","text":"SystemKeyboardPreview"}],"type":"strong"},{"text":" that can preview different configurations and themes. It’s a regular view that you can place anywhere:","type":"text"}],"type":"paragraph"},{"code":["struct MyView: View {","","    var body: some View {","        SystemKeyboardPreview(theme: try? .candyShop)","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"See the ","type":"text"},{"type":"reference","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Previews-Article","isActive":true},{"text":" article for more information.","type":"text"}]}],"kind":"content"}],"kind":"article","abstract":[{"type":"text","text":"This article describes the essential parts of KeyboardKit."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/keyboardkit\/essentials"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started"],"title":"Getting Started","generated":true}],"sections":[],"references":{"doc://KeyboardKit/documentation/KeyboardKit/Keyboard":{"abstract":[{"type":"text","text":"This namespace contains essential keyboard-related types."}],"role":"symbol","navigatorTitle":[{"text":"Keyboard","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Keyboard"}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard","url":"\/documentation\/keyboardkit\/keyboard","kind":"symbol","title":"Keyboard","type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardBehavior":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyboardBehavior","kind":"identifier"}],"title":"KeyboardBehavior","url":"\/documentation\/keyboardkit\/keyboardbehavior","kind":"symbol","abstract":[{"text":"This protocol can be used to specify behavior rules for the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"keyboard. It aims to separate behavior from action handling."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardBehavior","navigatorTitle":[{"text":"KeyboardBehavior","kind":"identifier"}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController":{"navigatorTitle":[{"text":"KeyboardInputViewController","kind":"identifier"}],"abstract":[{"text":"This class extends ","type":"text"},{"type":"codeVoice","code":"UIInputViewController"},{"text":" with KeyboardKit","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific functionality."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyboardInputViewController","kind":"identifier"}],"url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","type":"topic","title":"KeyboardInputViewController","kind":"symbol","role":"symbol"},"doc://KeyboardKit/documentation/KeyboardKit/Keyboard/AutocapitalizationType":{"kind":"symbol","title":"Keyboard.AutocapitalizationType","url":"\/documentation\/keyboardkit\/keyboard\/autocapitalizationtype","role":"symbol","type":"topic","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/AutocapitalizationType","abstract":[{"type":"text","text":"This enum defines various autocapitalization types."}],"navigatorTitle":[{"kind":"identifier","text":"AutocapitalizationType"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AutocapitalizationType","kind":"identifier"}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext/textDocumentProxy":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"textDocumentProxy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(pl)UITextDocumentProxy","text":"UITextDocumentProxy"}],"abstract":[{"type":"text","text":"The text document proxy that is currently active."}],"type":"topic","url":"\/documentation\/keyboardkit\/keyboardcontext\/textdocumentproxy","kind":"symbol","title":"textDocumentProxy","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/textDocumentProxy"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardStyleProvider":{"type":"topic","abstract":[{"type":"text","text":"This protocol can be implemented by classes that can define"},{"text":" ","type":"text"},{"type":"text","text":"styles for different parts of a keyboard."}],"url":"\/documentation\/keyboardkit\/keyboardstyleprovider","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardStyleProvider","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyboardStyleProvider","kind":"identifier"}],"title":"KeyboardStyleProvider","navigatorTitle":[{"kind":"identifier","text":"KeyboardStyleProvider"}],"role":"symbol","kind":"symbol"},"doc://KeyboardKit/documentation/KeyboardKit/Keyboard/Case":{"navigatorTitle":[{"text":"Case","kind":"identifier"}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/Case","role":"symbol","title":"Keyboard.Case","kind":"symbol","url":"\/documentation\/keyboardkit\/keyboard\/case","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Case","kind":"identifier"}],"abstract":[{"type":"text","text":"This enum defines various keyboard shift states."}],"type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/Keyboard/KeyboardType/emojis":{"abstract":[{"type":"text","text":"An emoji keyboard, with emojis and categories."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/KeyboardType\/emojis","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"emojis","kind":"identifier"}],"title":"Keyboard.KeyboardType.emojis","role":"symbol","url":"\/documentation\/keyboardkit\/keyboard\/keyboardtype\/emojis","type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/state":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/state","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/state","title":"state","abstract":[{"type":"text","text":"The default set of keyboard-specific state."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Keyboard","preciseIdentifier":"s:11KeyboardKit0A0V","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11KeyboardKit0A0V0A5StateC","text":"KeyboardState","kind":"typeIdentifier"}]},"doc://KeyboardKit/documentation/KeyboardKit":{"title":"KeyboardKit","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","url":"\/documentation\/keyboardkit","role":"collection","abstract":[{"text":"KeyboardKit helps you create custom keyboard extensions with Swift and SwiftUI.","type":"text"}],"kind":"symbol","type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/Keyboard/ReturnKeyType":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ReturnKeyType","kind":"identifier"}],"abstract":[{"text":"This enum defines various keyboard return key types.","type":"text"}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Keyboard\/ReturnKeyType","navigatorTitle":[{"text":"ReturnKeyType","kind":"identifier"}],"url":"\/documentation\/keyboardkit\/keyboard\/returnkeytype","title":"Keyboard.ReturnKeyType","role":"symbol","type":"topic"},"systemkeyboard-english-350.jpg":{"alt":"SystemKeyboard","type":"image","identifier":"systemkeyboard-english-350.jpg","variants":[{"url":"\/images\/systemkeyboard-english-350.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardActionHandler":{"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StandardKeyboardActionHandler","kind":"identifier"}],"url":"\/documentation\/keyboardkit\/standardkeyboardactionhandler","title":"StandardKeyboardActionHandler","kind":"symbol","abstract":[{"text":"This standard keyboard action handler is used by default by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"KeyboardKit and provides a standard way of handling actions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardActionHandler","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardActionHandler"}]},"https://github.com/KeyboardKit/KeyboardKitPro":{"identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","type":"link","titleInlineContent":[{"text":"KeyboardKit Pro","type":"text"}],"url":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","title":"KeyboardKit Pro"},"systemkeyboard-swedish-350.jpg":{"alt":"SystemKeyboard","type":"image","identifier":"systemkeyboard-swedish-350.jpg","variants":[{"url":"\/images\/systemkeyboard-swedish-350.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/services":{"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/services","abstract":[{"type":"text","text":"The default set of keyboard-specific services."}],"role":"symbol","type":"topic","title":"services","kind":"symbol","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/services","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"services"},{"kind":"text","text":": "},{"text":"Keyboard","kind":"typeIdentifier","preciseIdentifier":"s:11KeyboardKit0A0V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11KeyboardKit0A0V0A8ServicesC","text":"KeyboardServices"}]},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"url":"\/documentation\/keyboardkit\/getting-started","title":"Getting Started","abstract":[{"type":"text","text":"This article describes how to get started with KeyboardKit."}],"kind":"article","role":"article","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext/locale":{"kind":"symbol","title":"locale","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/locale","url":"\/documentation\/keyboardkit\/keyboardcontext\/locale","role":"symbol","type":"topic","abstract":[{"text":"The locale that is currently being used.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"locale"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","text":"Locale"}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext/keyboardType":{"kind":"symbol","title":"keyboardType","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext\/keyboardType","url":"\/documentation\/keyboardkit\/keyboardcontext\/keyboardtype","role":"symbol","type":"topic","abstract":[{"text":"The keyboard type that is currently used.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardType"},{"text":": ","kind":"text"},{"text":"Keyboard","kind":"typeIdentifier","preciseIdentifier":"s:11KeyboardKit0A0V"},{"kind":"text","text":"."},{"text":"KeyboardType","preciseIdentifier":"s:11KeyboardKit0A0V0A4TypeO","kind":"typeIdentifier"}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardController":{"navigatorTitle":[{"kind":"identifier","text":"KeyboardController"}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardController","role":"symbol","title":"KeyboardController","kind":"symbol","url":"\/documentation\/keyboardkit\/keyboardcontroller","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardController"}],"abstract":[{"type":"text","text":"This protocol is used to make using the keyboard input view"},{"text":" ","type":"text"},{"type":"text","text":"controller more abstract and available to more platforms."}],"type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/Previews-Article":{"url":"\/documentation\/keyboardkit\/previews-article","abstract":[{"text":"This article describes the KeyboardKit preview engine.","type":"text"}],"type":"topic","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Previews-Article","role":"article","kind":"article","title":"Previews"},"systemkeyboard-styled-350.jpg":{"identifier":"systemkeyboard-styled-350.jpg","alt":"SystemKeyboard","type":"image","variants":[{"url":"\/images\/systemkeyboard-styled-350.jpg","traits":["1x","light"]}]},"emojikeyboard-350.jpg":{"alt":"EmojiKeyboard","type":"image","identifier":"emojikeyboard-350.jpg","variants":[{"url":"\/images\/emojikeyboard-350.jpg","traits":["1x","light"]}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext":{"title":"KeyboardContext","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyboardContext"}],"url":"\/documentation\/keyboardkit\/keyboardcontext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"KeyboardContext"}],"kind":"symbol","abstract":[{"text":"This class provides keyboard extensions with contextual and","type":"text"},{"text":" ","type":"text"},{"text":"observable information about the keyboard extension itself.","type":"text"}],"type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/Emojis-Article":{"url":"\/documentation\/keyboardkit\/emojis-article","abstract":[{"text":"This article describes the KeyboardKit emoji engine.","type":"text"}],"type":"topic","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emojis-Article","role":"article","kind":"article","title":"Emojis"},"doc://KeyboardKit/documentation/KeyboardKit/SystemKeyboard":{"url":"\/documentation\/keyboardkit\/systemkeyboard","navigatorTitle":[{"kind":"identifier","text":"SystemKeyboard"}],"title":"SystemKeyboard","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"This keyboard can be used to create alphabetic, numeric and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"symbolic keyboards that mimic the native iOS keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SystemKeyboard","kind":"identifier"}]},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLocale":{"kind":"symbol","role":"symbol","url":"\/documentation\/keyboardkit\/keyboardlocale","title":"KeyboardLocale","abstract":[{"type":"text","text":"This enum defines KeyboardKit-supported locales."}],"type":"topic","navigatorTitle":[{"text":"KeyboardLocale","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"KeyboardLocale","kind":"identifier"}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale"}}}