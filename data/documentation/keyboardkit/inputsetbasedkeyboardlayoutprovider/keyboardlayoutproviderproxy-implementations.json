{"variants":[{"paths":["\/documentation\/keyboardkit\/inputsetbasedkeyboardlayoutprovider\/keyboardlayoutproviderproxy-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetBasedKeyboardLayoutProvider\/keyboardLayoutProvider(for:)"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetBasedKeyboardLayoutProvider\/KeyboardLayoutProviderProxy-Implementations"},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetBasedKeyboardLayoutProvider"]]},"sections":[],"metadata":{"role":"collectionGroup","title":"KeyboardLayoutProviderProxy Implementations","modules":[{"name":"KeyboardKit"}]},"references":{"doc://KeyboardKit/documentation/KeyboardKit/InputSetBasedKeyboardLayoutProvider/keyboardLayoutProvider(for:)":{"title":"keyboardLayoutProvider(for:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardLayoutProvider"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11KeyboardKit0A7ContextC","text":"KeyboardContext"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11KeyboardKit0A14LayoutProviderP","kind":"typeIdentifier","text":"KeyboardLayoutProvider"}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetBasedKeyboardLayoutProvider\/keyboardLayoutProvider(for:)","type":"topic","url":"\/documentation\/keyboardkit\/inputsetbasedkeyboardlayoutprovider\/keyboardlayoutprovider(for:)","role":"symbol","abstract":[{"type":"text","text":"The keyboard layout provider to use for the context."}]},"doc://KeyboardKit/documentation/KeyboardKit/InputSetBasedKeyboardLayoutProvider":{"title":"InputSetBasedKeyboardLayoutProvider","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetBasedKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"InputSetBasedKeyboardLayoutProvider","kind":"identifier"}],"url":"\/documentation\/keyboardkit\/inputsetbasedkeyboardlayoutprovider","role":"symbol","navigatorTitle":[{"text":"InputSetBasedKeyboardLayoutProvider","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This layout provider maps the provided input sets to device","type":"text"},{"text":" ","type":"text"},{"text":"specific keyboard layouts.","type":"text"}],"type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit":{"title":"KeyboardKit","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","url":"\/documentation\/keyboardkit","role":"collection","abstract":[{"text":"KeyboardKit helps you create custom keyboard extensions with Swift and SwiftUI.","type":"text"}],"kind":"symbol","type":"topic"}}}